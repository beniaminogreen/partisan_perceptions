
R version 4.1.3 (2022-03-10) -- "One Push-Up"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #!/usr/bin/env Rscript
> 
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──
✔ ggplot2 3.3.5     ✔ purrr   0.3.4
✔ tibble  3.1.6     ✔ dplyr   1.0.7
✔ tidyr   1.2.0     ✔ stringr 1.4.0
✔ readr   2.0.1     ✔ forcats 0.5.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> 
> sessionInfo()
R version 4.1.3 (2022-03-10)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Arch Linux

Matrix products: default
BLAS:   /usr/lib/libblas.so.3.10.0
LAPACK: /usr/lib/liblapack.so.3.10.0

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] forcats_0.5.1   stringr_1.4.0   dplyr_1.0.7     purrr_0.3.4    
[5] readr_2.0.1     tidyr_1.2.0     tibble_3.1.6    ggplot2_3.3.5  
[9] tidyverse_1.3.1

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.8.2     cellranger_1.1.0 pillar_1.6.3     compiler_4.1.3  
 [5] dbplyr_2.1.1     tools_4.1.3      jsonlite_1.8.0   lubridate_1.7.10
 [9] lifecycle_1.0.1  gtable_0.3.0     pkgconfig_2.0.3  rlang_1.0.0     
[13] reprex_2.0.1     rstudioapi_0.13  DBI_1.1.1        cli_3.1.1       
[17] haven_2.4.3      xml2_1.3.3       withr_2.4.2      httr_1.4.2      
[21] fs_1.5.0         generics_0.1.0   vctrs_0.3.8      hms_1.1.0       
[25] grid_4.1.3       tidyselect_1.1.1 glue_1.6.2       R6_2.5.1        
[29] fansi_0.5.0      readxl_1.3.1     tzdb_0.1.2       modelr_0.1.8    
[33] magrittr_2.0.2   backports_1.2.1  scales_1.1.1     ellipsis_0.3.2  
[37] rvest_1.0.1      assertthat_0.2.1 colorspace_2.0-2 utf8_1.2.2      
[41] stringi_1.7.6    munsell_0.5.0    broom_0.7.12     crayon_1.4.1    
> 
> load("../data/cleaned_data.Rdata")
> 
> # create subsets of respondents and attentive respondents that were exposed to
> # each issue
> 
> latino_communities_issue <- cleaned_data %>%
+   filter(issue == "Latino communities")
> 
> latino_communities_issue_att <- attentive %>%
+   filter(issue == "Latino communities")
> 
> blm_protests_issue <- cleaned_data %>%
+   filter(issue == "BLM / racial equality protests ")
> 
> blm_protests_issue_att <- attentive %>%
+   filter(issue == "BLM / racial equality protests ")
> 
> racial_equality_issue <- cleaned_data %>%
+   filter(issue == "Racial equality")
> 
> racial_equality_issue_att <- attentive %>%
+   filter(issue == "Racial equality")
> 
> # Model the effect of the different treatment assignments
> sum_treat <- lm(sum ~ treat, data = cleaned_data, weights = weight_1)
> sum_treat_att <- lm(sum ~ treat, data = attentive, weights = weight_1)
> 
> sum_woke <- lm(sum ~ woke, data = cleaned_data, weights = weight_1)
> sum_woke_att <- lm(sum ~ woke, data = attentive, weights = weight_1)
> 
> sum_woke_x_ideo5_dbl <- lm(sum ~ woke * ideo5_dbl, data = cleaned_data, weights = weight_1)
> sum_woke_x_ideo5_dbl_att <- lm(sum ~ woke * ideo5_dbl, data = attentive, weights = weight_1)
> 
> sum_woke_x_pvote <- lm(sum ~ woke * presvote20post, data = cleaned_data, weights = weight_1)
> sum_woke_x_pvote_att <- lm(sum ~ woke * presvote20post, data = attentive, weights = weight_1)
> 
> sum_woke_x_pid3 <- lm(sum ~ woke * pid3, data = cleaned_data, weights = weight_1)
> sum_woke_x_pid3_att <- lm(sum ~ woke * pid3, data = attentive, weights = weight_1)
> 
> # sum of all responses by woke or not for only respondents asked about latino
> # community issues.
> 
> sum_woke_latino <- lm(sum ~ woke, data = latino_communities_issue, weights = weight_1)
> sum_woke_ideo5_latino <- lm(sum ~ woke + ideo5_dbl, data = latino_communities_issue, weights = weight_1)
> sum_woke_x_ideo5_latino <- lm(sum ~ woke * ideo5_dbl, data = latino_communities_issue, weights = weight_1)
> 
> # sum of all responses by woke or not among only respondents given BLM
> # question
> sum_woke_blm <- lm(sum ~ woke, data = blm_protests_issue, weights = weight_1)
> sum_woke_ideo5_blm <- lm(sum ~ woke + ideo5_dbl, data = blm_protests_issue, weights = weight_1)
> sum_woke_x_ideo5_blm <- lm(sum ~ woke * ideo5_dbl, data = blm_protests_issue, weights = weight_1)
> 
> # sum of all responses by woke or not among only respondents given racial
> # equality question
> sum_woke_racial <- lm(sum ~ woke, data = racial_equality_issue, weights = weight_1)
> sum_woke_ideo5_racial <- lm(sum ~ woke + ideo5_dbl, data = racial_equality_issue, weights = weight_1)
> sum_woke_x_ideo5_racial <- lm(sum ~ woke * ideo5_dbl, data = racial_equality_issue, weights = weight_1)
> 
> save(sum_treat, sum_treat_att, sum_woke_x_ideo5_dbl, sum_woke, sum_woke_att,
+   sum_woke_x_ideo5_dbl_att, sum_woke_x_pvote, sum_woke_x_pvote_att,
+   sum_woke_x_pid3, sum_woke_x_pid3_att, sum_woke_latino,
+   sum_woke_ideo5_latino, sum_woke_x_ideo5_latino, sum_woke_blm,
+   sum_woke_ideo5_blm, sum_woke_x_ideo5_blm, sum_woke_racial,
+   sum_woke_ideo5_racial, sum_woke_x_ideo5_racial,
+   file = "../data/estimated_models.Rdata"
+ )
> 
> proc.time()
   user  system elapsed 
  1.361   0.051   1.409 
